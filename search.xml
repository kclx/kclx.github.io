<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>期末复习-hadoop</title>
      <link href="/2023/07/07/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0-hadoop/"/>
      <url>/2023/07/07/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0-hadoop/</url>
      
        <content type="html"><![CDATA[<h1 id="Hadoop"><a href="#Hadoop" class="headerlink" title="Hadoop"></a>Hadoop</h1><h2 id="Hadoop基本概念"><a href="#Hadoop基本概念" class="headerlink" title="Hadoop基本概念"></a>Hadoop基本概念</h2><ol><li>奠定大数据技术的理论基石的Google公司的三篇论文包括：GFS、MapReduce、BigTable，被称为Google公司的“三驾马车”。分别对应了Hadoop的HDFS、MapReduce、Hbase。</li><li>Hadoop的运行模式包括：单机（本地）模式，伪分布式模式，完全分布式模式</li><li>Hadoop能够使用户轻松开发和运行处理大数据的应用程序，它的优点是：处理能力强，实现了高效性和高可靠性；在集群间分配数据，高扩展性；能够保存多个数据副本，高容错性。</li><li>机架感知机制：同时兼顾节点之间的通信速度和提高数据的容错能力。</li><li>虚拟机是一种虚拟化技术，它能够在现有的操作系统上运行一个或多个操作系统。</li><li>Hadoop的安装方式包括：单机模式，伪分布式模式和完全分布式模式三种。</li><li>集群是指一组相互独立的、通过高速网络互联的计算机，它们构成了一个组，并以单一系统的模式加以管理。</li><li>分布式系统是指将多台服务器集中在一起， 每台服务器都实现总体中的不同业务，做不同的事情。</li></ol><p>在linux的命令行输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">命令，能够启动所有Hadoop相关的服务进程。</span></span><br><span class="line">stop-all.sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">命令，能够单独启动HDFS服务。</span></span><br><span class="line">start-dfs.sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看在当前系统中启动了几个java进程的信息的</span></span><br><span class="line">jps</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">实现显示本机IP</span> </span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><h2 id="HDFS功能"><a href="#HDFS功能" class="headerlink" title="HDFS功能"></a>HDFS功能</h2><ol><li>HDFS是基于流数据模式访问和处理超大文件的需求而开发的，具有高容错、高可靠性、高可扩展性、高吞吐率等特征，适合的读写任务是一次写入，多次读。</li><li>在HDFS中通过分块来实现数据的分布式存储功能，一个数据块会在多个此类节点中进行冗余备份。</li><li>NameNode是HDFS的管理节点，负责管理和维护HDFS的命名空间和管理DataNode上的数据块，它可以接受客户端的文件操作请求。所管理命名空间的信息文件有两个：fsimage和edits。</li><li>SecondaryNameNode，其主要职责是定期把NameNode上的fsimage和edits下载并合并生成新的fsimage。</li><li>在Hadoop2.2以上版本中，HDFS默认Block Size的大小是128m。</li><li>HDFS的缺点是：不适合处理低延迟的数据访问，不适合多用户写入及任意修改文件，不适合处理大量的小文件。</li><li>高可用性：是指通过在同一集群中运行两个NameNode的方式来防止由于单个NameNode故障引起的整个HDFS集群无法使用。</li><li>配额：是指可以设置HDFS在某个目录下文件数量与目录数量之和最大值。</li><li>联邦：是指在HDFS中有多个NameNode或NameSpace是联合的，相互独立，各自分工，管理自己的区域。</li><li>在core-site.xml修改fs.trash.interval选项来设置已删除文件在回收站中的保留时间。</li></ol><p>HDFS Shell命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建目录（文件夹）</span></span><br><span class="line">hdfs dfs -mkdir</span><br></pre></td></tr></table></figure><p>HDFS API</p><ul><li>getBlockSize：获得指定文件的数据块大小</li><li>getLength：实现返回文件长度</li></ul><h2 id="YARN的功能"><a href="#YARN的功能" class="headerlink" title="YARN的功能"></a>YARN的功能</h2><ol><li>Hadoop2.0相比较Hadoop1.0增加了YARN模块以实现对上层应用提供统一的资源管理和调度功能。</li><li>Container是YARN中的资源抽象，它封装了某个节点上的内存、CPU、磁盘、网络等多维度资源。</li><li>YARN提供先入先出调度器，容器调度器，公平调度器三种调度机制。</li></ol><h2 id="MapReduce的功能"><a href="#MapReduce的功能" class="headerlink" title="MapReduce的功能"></a>MapReduce的功能</h2><ol><li>MapReduce的特点：易于编程，分布式程序可以在大量廉价的PC上运行；良好的扩展性，可以通过增加集群中计算机数来提高计算能力；高容错性，当一台主机出故障计算任务可以转移到其他节点上。</li><li>MapReduce在对大数据的计算过程至少分为Map和Reduce两个部分。</li><li>MapReduce在Map步骤后对数据进行分区，排序，溢写，合并的步骤可以统称为 Shuffle 过程。Shuffle功能根据其功能和在MapReduce过程中的步骤，可以分为Map<br>Shuffle和Reduce Shuffle。</li><li>Hadoop的内置类型IntWritable用来定义整形数据，与Java的int类型对应。</li><li>Hadoop的内置类型 LongWritable 用来定义长整型型数据，与Java的long类型对应。</li><li>序列化是一种将内存中的Java对象转化为其他可存储文件或可跨计算机传输数据流的技术。</li><li>Hadoop序列化实现了org.apche.hadoop.io.Writable接口，其中包含write()和readFields()两个方法。</li><li>LineRecordReader 类实现了MapReduce从文本文件中逐行读取文本内容，生成&lt;Key,Value&gt;格式数据。</li><li>MapReduce通过分片对数据进行逻辑划分，在进行Map计算时所划分的处理数据对MapTask一一对应。所保存的HDFS的数据块（Block）与MapReduce所处理的数据切片（split）大小关系是相等、整数倍、几分之一的关系。</li><li>在Map阶段的分区步骤实现了根据Key值对数据进行划分，使其分配给对应ReduceTask。</li></ol><h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h2><ol><li>简述大数据理念的四个特征：<br/><br>数据体量大：大数据的数据量从 TB级别跃升到PB级别。<br/><br>数据类型多：大数据的数据类型包括前文提到的网络日志、视频、图片、地理位置信息等。<br/><br>处理速度快：1秒定律。这是大数据技术与传统数据挖掘技术的本质区别。<br/><br>价值密度低：以视频为例，在连续不间断的视频监控过程中，可能有用的数据仅仅有一两秒。</li><li>简述Hadoop对 Google公司三篇论文思想的实现的功能：<br/><br>HDFS是分布式文件系统，实现了分布式计算中数据存储管理功能，它是对GFS论文思想的实现。<br/><br>MapReduce是用于大规模数据集（大于1TB）的并行运算编程模型，它是对MapReduce论文思想的实现。<br/><br>HBase是一个分布式的、面向列的开源数据库。它是在Hadoop之上提供了类似于 BigTable的能力，是对BigTable论文思想的实现。</li><li>简述对HDFS进行访问和操作的三种方式：<br/><br>通过Web界面进行HDFS操作，使用浏览器访问HDFS对应IP端口为50070的页面对HDFS进行访问和操作。<br/><br>HDFS命令是由一系列类使用Linux<br>Shell的命令组成的，命令分为操作命令，管理命令和其他命令。可以通过Linux或远程控制段的命令行输入Shell名称来对HDFS进行访问和操作。<br/><br>Hadoop提供了多种HDFS的访问接口，Hadoop Java API位于“org.apache.hadoop.fs”包中，能够实现通过Java语言对HDFS进行文件操作和文件系统管理的访问功能。</li><li>简述HDFS的三个优点：<br/><br>处理超大文件：HDFS能够处理TB级甚至PB级的数据。<br/><br>支持流式数据访问：HDFS<br>设计建立在“一次写入，多次读取”的基础上，意味着一个数据集一旦生成，就会被复制分发到不同的存储节点，然后响应各种数据分析任务请求。<br/><br>低成本运行：HDFS可运行在低廉的商用硬件集群上。</li><li>简述MapReduce的四个特点：<br/><br>易于编程：用它的一些简单接口，就可以完成一个分布式程序，<br/><br>良好的扩展性：当计算资源不能得到满足的时候，可以通过简单地增加计算机来扩展它的计算能力。<br/><br>高容错性：一台主机出问题了，它可以把上面的计算任务转移到另外一个节点上运行，不至于使这个任务运行失败，而且这个过程不需要人工干预，完全由MapReduce在内部完成。<br/><br>能对PB级以上海量数据进行离线处理：MapReduce适合离线处理而不适合实时处理比如毫秒级别地返回一个结果，MapReduce很难做到。</li><li>简述Hadoop的三种安装模式：<br/><br>单机模式：指Hadoop运行在一台主机上，按默认配置以非分布式模式运行一个独的Java进程。单机模式是Hadoop的默认模式。<br/><br>伪分布式模式：指Hadoop运行在一台主机上，使用多个Java进程，模仿完全分布式的各类节点。伪分布式模式具备完全分布式的所有功能，常用调试程序。<br/><br>完全分布式模式：也叫集群模式，是将 Hadoop运行在多台主机中，各个主机按照相关配置运行相立的Hadoop守护进程。完全分布式模式是真正的分布式环境，可用于实际的生产环境。</li></ol><h2 id="易错概念"><a href="#易错概念" class="headerlink" title="易错概念"></a>易错概念</h2><ol><li>Hadoop是Java开发的，所以 MapReduce只支持Java语言编写。</li><li>Mapreduce的input split就是一个block。</li><li>客户端上传的数据首先发送给NameNode，根据NameNode所管理的DataNode的分工再逐个发送给DataNode。</li><li>为了实现环形缓冲区功能，Hadoop需要配置特殊结构的环形内存芯片。</li><li>MapReduce是Java语言开发的，因此其数据类型也沿用了Java的数据类型。</li><li>如果NameNode意外终止，SecondaryNameNode会接替它使集群继续工作。</li><li>为了保证数据的稳定性，数据切片（Split）的大小必须是数据块（block）的一样大。</li><li>高可用性HA通过在一个集群中同时处于Active状态的两个NameNode来保证HDFS能够正常运行。</li><li>数据块的大小（BlockSize）是不可以修改的。</li><li>在MapReduce计算中为了提高数据计算速度，当单个MapTask完成后数据会直接被拉取到Reduce阶段进行后续计算。</li><li>由于会出现相同的Key在不同的ReduceTask进行统计的情况，因此在Reduce阶段最后需要对所有节点所生成所有文件进行合并。</li></ol><h2 id="HDFS-Shell命令操作"><a href="#HDFS-Shell命令操作" class="headerlink" title="HDFS Shell命令操作"></a>HDFS Shell命令操作</h2><ol><li>在HDFS的根目录中上创建一个目录结构，为<code>new/folder</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -mkdir -p /new/folder</span><br></pre></td></tr></table></figure></li><li>在HDFS根目录的<code>new</code>目录中创建文件<code>1.txt</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -touchz /new/1.txt</span><br></pre></td></tr></table></figure></li><li>将用户目录下的<code>context.txt</code>内容追加到HDFS文件<code>/new/1.txt</code>中<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -appendToFile context.txt /new/1.txt</span><br></pre></td></tr></table></figure></li><li>查看HDFS文件<code>/new/1.txt</code>的文件内容<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -cat /new/1.txt</span><br></pre></td></tr></table></figure></li><li>查看HDFS文件目录<code>/new</code>所占的磁盘空间大小<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -du /new</span><br></pre></td></tr></table></figure></li><li>删除HDFS文件目录<code>/new</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -rm /new</span><br></pre></td></tr></table></figure></li><li>在HDFS的根目录中上创建一个目录结构，为<code>dir1/dir2/dir3</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -mkdir -p /dirl/dir2/dir3</span><br></pre></td></tr></table></figure></li><li>将Linux用户根目录中的文件<code>localFile.txt</code>复制到HDFS根目录中保存为<code>hdfsFile.txt</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -copyFromLocal localFile.txt /hdfsFile.txt</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -put localFile.txt /hdfsFile.txt</span><br></pre></td></tr></table></figure></li><li>显示HDFS中级联列出根目录下的所有目录和文件<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -ls -R /</span><br></pre></td></tr></table></figure></li><li>在HDFS根目录<code>dir1</code>目录中创建文件<code>1.txt</code>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -touchz /dir1/1.txt</span><br></pre></td></tr></table></figure></li><li>将用户目录下的<code>code2.txt</code>内容追加到HDFS文件<code>/dir1/1.txt</code>中   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -appendToFile code2.txt /dir1/1.txt</span><br></pre></td></tr></table></figure></li><li>将dir1目录中创建文件<code>1.txt</code>下载到Linux的本地根目录中，保存为文件<code>downloadFile.txt</code>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -copyToLocal / dir1/1.txt downloadFile.txt</span><br></pre></td></tr></table></figure>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -get /dir1/1.txt downloadFile.txt</span><br></pre></td></tr></table></figure></li></ol><h3 id="HDFS-API编程"><a href="#HDFS-API编程" class="headerlink" title="HDFS API编程"></a>HDFS API编程</h3><ol><li><p>已知HDFS的IP地址为<code>192.168.44.128</code>，访问端口为<code>9000</code>，用户名为<code>admin</code>。编程实现调用<code>FileSystem</code><br>类自带的<code>copyFromLocalFile</code>方法上传Linux系统中本地文件<code>/home/admin/upload.txt</code>到HDFS文件夹<code>/user/admin/</code><br>中保存为文件<code>1.txt</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Exam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FileSystem;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">URI</span> <span class="variable">uri</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://192.168.44.128:9000&quot;</span>);</span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fs</span> <span class="operator">=</span> FileSystem.get(uri, conf, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        <span class="type">Path</span> <span class="variable">src</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/home/admin/upload.txt&quot;</span>);</span><br><span class="line">        <span class="type">Path</span> <span class="variable">dst</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/user/admin/1.txt&quot;</span>);</span><br><span class="line">        fs.copyFromLocalFile(src, dst);</span><br><span class="line">        fs.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>已知HDFS的IP地址为<code>192.168.44.128</code>，访问端口为<code>9000</code>，用户名为<code>admin</code>。编程实现调用<code>FileSystem</code>类自带的<code>copyToLocalFile</code><br>方法下载HDFS文件夹<code>/user/admin/</code>中文件<code>1.txt</code>到Linux系统中本地目录<code>/home/admin/</code>保存为<code>download.txt</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Exam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FileSystem;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">URI</span> <span class="variable">uri</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://192.168.44.128:9000&quot;</span>);</span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fs</span> <span class="operator">=</span> FileSystem.get(uri, conf, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        <span class="type">Path</span> <span class="variable">src</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/user/admin/1.txt&quot;</span>);</span><br><span class="line">        <span class="type">Path</span> <span class="variable">dst</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/home/admin/download.txt&quot;</span>);</span><br><span class="line">        fs.copyToLocalFile(src, dst);</span><br><span class="line">        fs.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="MapReduce程序设计题"><a href="#MapReduce程序设计题" class="headerlink" title="MapReduce程序设计题"></a>MapReduce程序设计题</h2><h3 id="练习1"><a href="#练习1" class="headerlink" title="练习1"></a>练习1</h3><p>在某企业管理系统的数据库中所保存员工信息表EMP的结构如下所示：</p><table><thead><tr><th>EMPNO</th><th>ENAME</th><th>JOB</th><th>MGR</th><th>HIREDATE</th><th>SAL</th><th>COMM</th><th>DEPTNO</th></tr></thead><tbody><tr><td>3641</td><td>石金泉</td><td>管理</td><td>0001</td><td>2009&#x2F;3&#x2F;4</td><td>20000</td><td>50000</td><td>1</td></tr><tr><td>6984</td><td>高丽</td><td>行政</td><td>5684</td><td>2009&#x2F;3&#x2F;7</td><td>3500</td><td>4000</td><td>1</td></tr><tr><td>7397</td><td>门亮</td><td>开发</td><td>7396</td><td>2009&#x2F;5&#x2F;11</td><td>10000</td><td>25000</td><td>2</td></tr><tr><td>7398</td><td>李贺</td><td>开发</td><td>7396</td><td>2009&#x2F;9&#x2F;22</td><td>10000</td><td>25000</td><td>2</td></tr><tr><td>8049</td><td>李加里</td><td>销售</td><td>3641</td><td>2009&#x2F;3&#x2F;21</td><td>8000</td><td>50000</td><td>3</td></tr><tr><td>8331</td><td>孙立宪</td><td>销售</td><td>8049</td><td>2009&#x2F;4&#x2F;29</td><td>6000</td><td>40000</td><td>3</td></tr><tr><td>9486</td><td>李明礼</td><td>生产</td><td>3641</td><td>2009&#x2F;3&#x2F;25</td><td>7000</td><td>9000</td><td>4</td></tr><tr><td>9696</td><td>张顺涛</td><td>生产</td><td>9486</td><td>2009&#x2F;4&#x2F;20</td><td>4000</td><td>5000</td><td>4</td></tr></tbody></table><p>其中表中各字段代表的含义：</p><table><thead><tr><th>字段</th><th>含义</th></tr></thead><tbody><tr><td>EMPNO</td><td>员工号</td></tr><tr><td>ENAME</td><td>员工姓名</td></tr><tr><td>JOB</td><td>岗位</td></tr><tr><td>MGR</td><td>直属领导</td></tr><tr><td>HIREDATE</td><td>雇佣时间</td></tr><tr><td>SAL</td><td>月薪</td></tr><tr><td>COMM</td><td>奖金</td></tr><tr><td>DEPTNO</td><td>部门号</td></tr></tbody></table><p>将数据从数据库中导出，保存为文件emp.csv以作为统计每个部门员工月薪总额的基础数据，文件其内容为：</p><blockquote><p>3641,石金泉,管理,0001,2009&#x2F;3&#x2F;4,20000,50000,1</p><p>6984,高丽,行政,5684,2009&#x2F;3&#x2F;7,3500,4000,1</p><p>7397,门亮,开发,7396,2009&#x2F;5&#x2F;11,10000,25000,2</p><p>7398,李贺,开发,7396,2009&#x2F;9&#x2F;22,10000,25000,2</p><p>8049,李加里,销售,3641,2009&#x2F;3&#x2F;21,8000,50000,3</p><p>8331,孙立宪,销售,8049,2009&#x2F;4&#x2F;29,6000,40000,3</p><p>9486,李明礼,生产,3641,2009&#x2F;3&#x2F;25,7000,9000,4</p><p>9696,张顺涛,生产,9486,2009&#x2F;4&#x2F;20,4000,5000,4</p></blockquote><p>将<code>emp.csv</code>上传到HDFS目录<code>hdfs://192.168.44.128:9000/user/input/</code></p><p>以MapReduce方式实现根据<code>emp.csv</code>中所包含的员工信息统计部门月薪总额的功能，以文字的方式分析求每个部门月工资总额数据的Map和Reduce步骤各完成的功能以及输入，输出数据类型。<br>根据注释描述分别填写Main类，Map类和Reduce类对应java代码。要求将计算的结果保存在HDFS目录<code>hdfs://192.168.44.128:9000/user/output/</code><br>中</p><h4 id="程序分析"><a href="#程序分析" class="headerlink" title="程序分析"></a>程序分析</h4><p>Map阶段输入类型为<code>Key LongWritable : Value Text</code>分别表示文本偏移量，当前行员工的信息</p><p>Map所实现的功能是根据逗号从当前行文本内容中提取出当前员工的部门编号和月薪</p><p>输出<code>key IntWritable : Value IntWritable</code>分别表示部门编号，当前行员工的月薪</p><p>Reduce阶段输入类型<code>Key IntWritable : Value IntWritable</code>分别表示部门编号，当前部门的员工月薪集合</p><p>Reduce所实现的功能是将当前部门的所有员工月薪进行累加得到整个部门的月薪总额</p><p>输出<code>Key IntWritable : Value IntWritable</code>分别表示部门编号，当前部门的月薪总额</p><h4 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h4><ol><li><p>ExamMapper Class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MapReduceExam1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.LongWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExamMapper</span> <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;LongWritable, Text, IntWritable, IntWritable&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">map</span><span class="params">(LongWritable key1, Text value1, Context context)</span></span><br><span class="line">            <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">        <span class="comment">// 读取的一行文本内容</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> value1.toString();</span><br><span class="line">        <span class="comment">// 将字符串以逗号为标记点进行分割</span></span><br><span class="line">        String[] words = data.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="comment">// 输出&lt; key,Value &gt;</span></span><br><span class="line">        context.write(<span class="keyword">new</span> <span class="title class_">IntWritable</span>(Integer.parseInt(words[<span class="number">7</span>])), <span class="keyword">new</span> <span class="title class_">IntWritable</span>(Integer.parseInt(words[<span class="number">5</span>])));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>ExamReducer Class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MapReduceExam1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExamReducer</span> <span class="keyword">extends</span> <span class="title class_">Reducer</span>&lt;IntWritable, IntWritable, IntWritable, IntWritable&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">reduce</span><span class="params">(IntWritable key3, Iterable&lt;IntWritable&gt; value3, Context context)</span></span><br><span class="line">            <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">total</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (IntWritable value : value3) &#123;</span><br><span class="line">            total += value.get();</span><br><span class="line">        &#125;</span><br><span class="line">        context.write(key3, <span class="keyword">new</span> <span class="title class_">IntWritable</span>(total));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>ExamMain Class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MapReduceExam1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExamMain</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Job</span> <span class="variable">job</span> <span class="operator">=</span> Job.getInstance(<span class="keyword">new</span> <span class="title class_">Configuration</span>());</span><br><span class="line">        <span class="comment">// 设置Client的类</span></span><br><span class="line">        job.setJarByClass(ExamMain.class);</span><br><span class="line">        <span class="comment">// 设置Map的类和输入类型</span></span><br><span class="line">        job.setMapperClass(ExamMapper.class);</span><br><span class="line">        job.setMapOutputKeyClass(IntWritable.class);</span><br><span class="line">        job.setMapOutputValueClass(IntWritable.class);</span><br><span class="line">        <span class="comment">// 设置reduce的类和输入类型</span></span><br><span class="line">        job.setReducerClass(ExamReducer.class);</span><br><span class="line">        job.setOutputKeyClass(IntWritable.class);</span><br><span class="line">        job.setOutputValueClass(IntWritable.class);</span><br><span class="line"></span><br><span class="line">        FileInputFormat.setInputPaths(job, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;hdfs://192.168.44.128:9000/user/input/Employee/EMP.csv&quot;</span>));</span><br><span class="line">        FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;hdfs://192.168.44.128:9000/user/output/SalaryTotal&quot;</span>));</span><br><span class="line">        job.waitForCompletion(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="练习1-1"><a href="#练习1-1" class="headerlink" title="练习1"></a>练习1</h3><p>在某图书馆图书管理系统的数据库中所保存图书信息表BookInfo的结构如下所示：</p><table><thead><tr><th>BOOKID</th><th>BNAME</th><th>ROOM</th><th>TYPE</th><th>DATE</th><th>PRICE</th></tr></thead><tbody><tr><td>0001</td><td>老人与海</td><td>1</td><td>文学</td><td>2009&#x2F;3&#x2F;4</td><td>35</td></tr><tr><td>0002</td><td>时尚杂志</td><td>2</td><td>期刊杂志</td><td>2009&#x2F;3&#x2F;7</td><td>20</td></tr><tr><td>0003</td><td>C语言</td><td>3</td><td>计算机</td><td>2009&#x2F;5&#x2F;11</td><td>32</td></tr><tr><td>0004</td><td>红楼梦</td><td>1</td><td>文学</td><td>2009&#x2F;9&#x2F;22</td><td>50</td></tr><tr><td>0005</td><td>JAVA开发</td><td>3</td><td>计算机</td><td>2009&#x2F;3&#x2F;21</td><td>24</td></tr><tr><td>0006</td><td>计算机基础</td><td>3</td><td>计算机</td><td>2009&#x2F;4&#x2F;29</td><td>25</td></tr><tr><td>0007</td><td>西游记</td><td>1</td><td>文学</td><td>2009&#x2F;3&#x2F;25</td><td>40</td></tr><tr><td>0008</td><td>读者文摘</td><td>2</td><td>期刊杂志</td><td>2009&#x2F;4&#x2F;20</td><td>8</td></tr></tbody></table><p>其中表中各字段代表的含义：</p><table><thead><tr><th>字段</th><th>含义</th></tr></thead><tbody><tr><td>BOOKID</td><td>图书编号</td></tr><tr><td>BNAME</td><td>书名</td></tr><tr><td>ROOM</td><td>所在房间</td></tr><tr><td>TYPE</td><td>图书类型</td></tr><tr><td>DATE</td><td>购入时间</td></tr><tr><td>PRICE</td><td>价格</td></tr></tbody></table><p>将数据从数据库中导出，保存为文件book.csv以作为统计每类图书总价格的基础数据，文件其内容为：</p><blockquote><p>0001,老人与海,1,文学,2009&#x2F;3&#x2F;4,35</p><p>0002,时尚杂志,2,期刊杂志,2009&#x2F;3&#x2F;7,20</p><p>0003,C语言,3 计算机,2009&#x2F;5&#x2F;11,32</p><p>0004,红楼梦,1,文学,2009&#x2F;9&#x2F;22,50</p><p>0005,JAVA开发,3,计算机,2009&#x2F;3&#x2F;21,24</p><p>0006,计算机基础,3,计算机,2009&#x2F;4&#x2F;29,25</p><p>0007,西游记,1,文学,2009&#x2F;3&#x2F;25,40</p><p>0008,读者文摘,2,期刊杂志,2009&#x2F;4&#x2F;20,8</p></blockquote><p>将<code>book.csv</code>上传到HDFS目录<code>hdfs://192.168.44.128:9000/user/input/</code><br>以MapReduce方式实现根据book.csv中所包含的图书信息统计每类图书的总价格的功能，以文字的方式分析求每大类图书价格的Map和Reduce步骤各完成的功能以及输入，输出数据类型。根据注释描述分别填写Main类，Map类和Reduce类对应java代码。要求将计算的结果保存在HDFS目录<code>hdfs://192.168.44.128:9000/user/output/</code><br>中。</p><h4 id="程序分析-1"><a href="#程序分析-1" class="headerlink" title="程序分析"></a>程序分析</h4><p>Map阶段输入类型为<code>Key LongWritable : Value Text</code>分别表示文本偏移量，当前行图书的信息</p><p>Map所实现的功能是根据逗号从当前行文本内容中提取出当前图书的类型和价格</p><p>输出<code>key Text : Value IntWritable</code>分别表示当前行图书的类型和价格</p><p>Reduce阶段输入类型为<code>key Text : Value IntWritable</code>分别表示当前行图书的类型，当前类所有图书的价格集合</p><p>Reduce所实现的功能是将当前类型的所有图书价格进行累加得的价格总额</p><p>输出<code>key Text : Value IntWritable</code>分别表示图书类型，当前类型图书的价格总额</p><h4 id="程序-1"><a href="#程序-1" class="headerlink" title="程序"></a>程序</h4><ol><li>ExamMapper Class<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MapReduceExam2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.LongWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExamMapper</span> <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;LongWritable, Text, Text, IntWritable&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">map</span><span class="params">(LongWritable key1, Text value1, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> value1.toString();</span><br><span class="line">        <span class="comment">// 将字符串以逗号为标记点进行分割，保存如字符串数组中</span></span><br><span class="line">        String[] words = data.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        context.write(<span class="keyword">new</span> <span class="title class_">Text</span>(words[<span class="number">3</span>]), <span class="keyword">new</span> <span class="title class_">IntWritable</span>(Integer.parseInt(words[<span class="number">5</span>])));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>ExamReducer Class<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MapReduceExam2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExamReducer</span> <span class="keyword">extends</span> <span class="title class_">Reducer</span>&lt;Text, IntWritable, Text, IntWritable&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">reduce</span><span class="params">(Text key3, Iterable&lt;IntWritable&gt; value3, Context context)</span></span><br><span class="line">            <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">total</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (IntWritable value : value3) &#123;</span><br><span class="line">            total += value.get();</span><br><span class="line">        &#125;</span><br><span class="line">        context.write(key3, <span class="keyword">new</span> <span class="title class_">IntWritable</span>(total));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>ExamMain Class<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MapReduceExam2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExamMain</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 创建一个job作业实例</span></span><br><span class="line">        <span class="type">Job</span> <span class="variable">job</span> <span class="operator">=</span> Job.getInstance(<span class="keyword">new</span> <span class="title class_">Configuration</span>());</span><br><span class="line">        <span class="comment">// 设置作业的启动类</span></span><br><span class="line">        job.setJarByClass(ExamMain.class);</span><br><span class="line">        <span class="comment">// 设置Map的类和输入类型</span></span><br><span class="line">        job.setMapperClass(ExamMapper.class);</span><br><span class="line">        job.setMapOutputKeyClass(Text.class);</span><br><span class="line">        job.setMapOutputValueClass(IntWritable.class);</span><br><span class="line">        <span class="comment">// 设置reduce的类和输入类型</span></span><br><span class="line">        job.setReducerClass(ExamReducer.class);</span><br><span class="line">        job.setOutputKeyClass(Text.class);</span><br><span class="line">        job.setOutputValueClass(IntWritable.class);</span><br><span class="line"></span><br><span class="line">        FileInputFormat.setInputPaths(job, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;hdfs://192.168.44.128:9000/ExamData/book.csv&quot;</span>));</span><br><span class="line">        FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;hdfs://192.168.44.128:9000/ExamOutput/&quot;</span>));</span><br><span class="line">        job.waitForCompletion(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于ChatGPT的tokens收费标准</title>
      <link href="/2023/07/07/About-GPT-Token/"/>
      <url>/2023/07/07/About-GPT-Token/</url>
      
        <content type="html"><![CDATA[<h1 id="关于ChatGPT的tokens收费标准"><a href="#关于ChatGPT的tokens收费标准" class="headerlink" title="关于ChatGPT的tokens收费标准"></a>关于ChatGPT的tokens收费标准</h1><p>根据OpenAI官网给出的<a href="https://openai.com/pricing">计费标准</a></p><p>总结了以下表格：</p><table><thead><tr><th>模型</th><th>最大长度</th><th>输入（&#x2F;1k tokens）</th><th>输出（1k tokens）</th><th>使用价格</th><th>类型</th></tr></thead><tbody><tr><td>GPT-4</td><td>8K</td><td>$0.03</td><td>$0.06</td><td></td><td>语言模型</td></tr><tr><td>GPT-4</td><td>32K</td><td>$0.06</td><td>$0.12</td><td></td><td>语言模型</td></tr><tr><td>GPT-3.5 Turbo</td><td>4K</td><td>$0.0015</td><td>$0.002</td><td></td><td>语言模型</td></tr><tr><td>GPT-3.5 Turbo</td><td>16K</td><td>$0.003</td><td>$0.004</td><td></td><td>语言模型</td></tr><tr><td>Ada</td><td></td><td>$0.0004</td><td>$0.0016</td><td></td><td>微调模型</td></tr><tr><td>Babbage</td><td></td><td>$0.0006</td><td>$0.0024</td><td></td><td>微调模型</td></tr><tr><td>Curie</td><td></td><td>$0.0030</td><td>$0.012</td><td></td><td>微调模型</td></tr><tr><td>Davinci</td><td></td><td>$0.0300</td><td>$0.12</td><td></td><td>微调模型</td></tr><tr><td>Ada v2</td><td>Ada v2</td><td></td><td></td><td>$0.0001&#x2F;1K tokens</td><td>嵌入模型</td></tr><tr><td>Image models</td><td>1024×1024</td><td></td><td></td><td>$0.020&#x2F;image</td><td>图像模型</td></tr><tr><td>Image models</td><td>512×512</td><td></td><td></td><td>$0.018&#x2F;image</td><td>图像模型</td></tr><tr><td>Image models</td><td>256×256</td><td></td><td></td><td>$0.016&#x2F;image</td><td>图像模型</td></tr><tr><td>Whisper</td><td></td><td></td><td></td><td>$0.006&#x2F;min</td><td>音频模型</td></tr></tbody></table><blockquote><p>事实上，OpenAI推出的模型不只这些，通过api可以得到最完整的模型列表。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https://api.openai.com/v1/models \</span><br><span class="line">-H &quot;Authorization: Bearer $OPENAI_API_KEY&quot;</span><br></pre></td></tr></table></figure><p>如果没有key或者不想发送请求可以直接获取下面的json数据都是一样的</p><p>截止2023年7月7日全部模型的json数据：</p><div class="link-group"><div class="tagLink"><a class="link-card" no-pjax target="_blank" title="openai_models.json" href="/citation/openai_models.json"><span class="link-card-backdrop" style="background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)"></span><div class="left"><img src="https://img.51miz.com/Element/00/37/79/59/10df0417_E377959_b7bb9dfa.png" class="lazyload placeholder" data-srcset="https://img.51miz.com/Element/00/37/79/59/10df0417_E377959_b7bb9dfa.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"/></div><div class="right"><p class="text">openai_models.json</p><p class="url">/citation/openai_models.json</p></div></a></div></div></blockquote><h2 id="Tokens"><a href="#Tokens" class="headerlink" title="Tokens"></a>Tokens</h2><p>上述内容中多次提到了tokens的概念，什么是tokens？</p><blockquote><p>您可以将标记视为用于自然语言处理的单词片段。对于英文文本，1 个标记大约为 4 个字符或 0.75 个单词。作为参考，莎士比亚的作品集大约有<br>90 万字或 120 万个符号。</p><p><code>1000</code>tokens约等于<code>750</code>个单词</p><p>要了解有关代币如何工作并估计您的使用情况的更多信息……</p><ul><li>使用我们的交互式 <a href="https://platform.openai.com/tokenizer">分词器工具</a>进行实验。</li><li>登录您的帐户并在 Playground 中输入文本。页脚中的计数器将显示文本中有多少个标记。</li></ul></blockquote><p>根据OpenAI官方给出的回答还是无法有一个具体的掌握。</p><p>转换为中文，tokens的大小为多少？</p><p>使用gpt-3.5-turbo-0301为例：</p><table><thead><tr><th>Request content</th><th>Response content</th><th>input tokens</th><th>output tokens</th><th>total</th></tr></thead><tbody><tr><td>Say this is a test!</td><td>This is a test!</td><td>13</td><td>5</td><td>18</td></tr><tr><td>请形容一下小猫</td><td>小猫是一种可爱的小动物，通常体型娇小，毛发柔软。它们的眼睛大而明亮，透露出一种天真无邪的神采。小猫的耳朵尖尖，灵敏而警觉，时刻捕捉着周围的声音。它们的小鼻子粉嫩可爱，鼻尖微微动着，好奇地探索着周围的世界。小猫的爪子尖锐而灵活，能够轻松攀爬和抓捕猎物。它们的尾巴修长而灵动，时而垂下，时而竖起，表达出各种情绪。小猫的身体柔软而灵活，它们经常会摆出各种可爱的姿势，让人看了心情愉悦。总之，小猫是一种令人陶醉的可爱生物，它们的存在让人感到温暖和幸福。</td><td>16</td><td>319</td><td>335</td></tr><tr><td>请翻译：This technical report presents GPT-4, a large multimodal model capable of processing image and text inputs and producing text outputs. Such models are an important area of study as they have the potential to be used in a wide range of applications, such as dialogue systems, text summarization, and machine translation. As such, they have been the subject of substantial interest and progress in recent years.</td><td>这份技术报告介绍了GPT-4，一个能够处理图像和文本输入并生成文本输出的大型多模态模型。这样的模型是研究的重要领域，因为它们有潜力在各种应用中使用，如对话系统、文本摘要和机器翻译。因此，近年来它们受到了广泛关注和进展的研究对象。</td><td>93</td><td>127</td><td>220</td></tr></tbody></table><p>经过计算得出，1字约等于1token，英文状态4个字符约等于1token。</p><blockquote><p>假设：我现在有一篇论文要写，需求（input content）输入了100字，需要生成一篇5000字的论文（output<br>content），算上中间的润色和修改（约等于重复3遍），那么可以计算写一篇论文大约会消耗tokens &#x3D; ((100 + 5000) * 5) &#x3D; 25500</p><p>使用GPT-3.5，费用为 0.03825美元 约等于 0.277人民币，<br>如果内容总长度超过4096k，那么价格会翻一倍，费用为 0.0765美元 约等于 0.5534人民币（汇率为1美元兑7.2337人民币）</p><p>使用GPT-4，费用为 0.765美元 约等于 5.534人民币</p><p>当然这只是猜测。</p></blockquote><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>使用gpt-3.5-turbo-16k与gpt-3.5-turbo-4k（并未写完一篇论文）：：</p><div class="link-group"><div class="tagLink"><a class="link-card" no-pjax target="_blank" title="gpt-3.5-turbo-16k.html" href="/citation/gpt-3.5-turbo-16k.html"><span class="link-card-backdrop" style="background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)"></span><div class="left"><img src="https://img.51miz.com/Element/00/37/79/59/10df0417_E377959_b7bb9dfa.png" class="lazyload placeholder" data-srcset="https://img.51miz.com/Element/00/37/79/59/10df0417_E377959_b7bb9dfa.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"/></div><div class="right"><p class="text">gpt-3.5-turbo-16k.html</p><p class="url">/citation/gpt-3.5-turbo-16k.html</p></div></a></div><div class="tagLink"><a class="link-card" no-pjax target="_blank" title="gpt-3.5-turbo-4k.html" href="/citation/gpt-3.5-turbo-4k.html"><span class="link-card-backdrop" style="background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)"></span><div class="left"><img src="https://img.51miz.com/Element/00/37/79/59/10df0417_E377959_b7bb9dfa.png" class="lazyload placeholder" data-srcset="https://img.51miz.com/Element/00/37/79/59/10df0417_E377959_b7bb9dfa.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"/></div><div class="right"><p class="text">gpt-3.5-turbo-4k.html</p><p class="url">/citation/gpt-3.5-turbo-4k.html</p></div></a></div></div><p>整理好的论文（字数：7479）：</p><div class="link-group"><div class="tagLink"><a class="link-card" no-pjax target="_blank" title="习近平新时代.pdf" href="/citation/习近平新时代.pdf"><span class="link-card-backdrop" style="background-image: url(https://cdn.pixabay.com/photo/2018/12/05/13/41/panda-3857754__340.jpg)"></span><div class="left"><img src="https://img.51miz.com/Element/00/37/79/59/10df0417_E377959_b7bb9dfa.png" class="lazyload placeholder" data-srcset="https://img.51miz.com/Element/00/37/79/59/10df0417_E377959_b7bb9dfa.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"/></div><div class="right"><p class="text">习近平新时代.pdf</p><p class="url">/citation/习近平新时代.pdf</p></div></a></div></div><p>根据最后的返回<code>Total tokens spent: 52087</code>可以得出本次论文一共花费了<code>52087/1000*0.003*7.2337=1.1303451957¥</code>花费1.13人民币。</p><h2 id="总结与思考"><a href="#总结与思考" class="headerlink" title="总结与思考"></a>总结与思考</h2><p>为什么会与预测的花费不一致？</p><ol><li>示例中生成的文章为7000+</li><li>采用的是gpt对话的形式，也就是说每一次对话都需要把本次对话中的上文全部当作前置传入，这样就增加了tokens的消耗</li><li>输入与输出的tokens的价格并不相等，输出的tokens更贵一些</li></ol>]]></content>
      
      
      <categories>
          
          <category> Pointless small talk </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gpt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>期末复习-数据库原理</title>
      <link href="/2023/07/06/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86/"/>
      <url>/2023/07/06/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h2><p>具体考些什么我也不太记得，有关系代数、sql语言、E-R图，其余的不太清楚了。</p><h2 id="关系代数"><a href="#关系代数" class="headerlink" title="关系代数"></a>关系代数</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>关系代数是一种数学工具和查询语言，用于处理和操作关系型数据库中的关系数据。它提供了一组操作符，用于对关系进行操作和组合，以获取所需的数据结果。</p><p>关系代数的基本操作符包括：</p><ol><li>选择（Selection）：根据指定的条件从关系中选择满足条件的元组。</li><li>投影（Projection）：从关系中选择指定的属性列，生成一个新的关系。</li><li>连接（Join）：将两个关系根据共享的属性列合并成一个新的关系。</li><li>交（Intersection）：获取两个关系的交集，即共有的元组。</li><li>并（Union）：获取两个关系的并集，即合并两个关系的元组，去除重复项。</li><li>差（Difference）：获取一个关系中有而另一个关系中没有的元组。</li><li>除（Division）：根据指定条件从一个关系中选择满足条件的元组，然后从另一个关系中选择与前一步结果关系中的所有元组匹配的元组。</li></ol><p>通过组合和嵌套这些基本操作符，可以进行更复杂的查询和操作，从而实现对关系数据库中的数据的有效管理和检索。关系代数是关系数据库理论的基础之一，它提供了一种形式化的方式来描述和操作关系数据库中的数据。</p><p>以下是关系代数基本操作的常用符号表示：</p><ol><li><p>选择（Selection）：用σ（sigma）符号表示。例如，σ&lt;条件&gt;(关系) 表示选择满足指定条件的元组。</p></li><li><p>投影（Projection）：用π（pi）符号表示。例如，π&lt;属性列表&gt;(关系) 表示从关系中选择指定的属性列。</p></li><li><p>连接（Join）：用⨝（join）符号表示。例如，关系1 ⨝ 关系2 表示根据共享的属性列将两个关系进行连接。</p></li><li><p>交（Intersection）：用∩（intersection）符号表示。例如，关系1 ∩ 关系2 表示获取两个关系的交集，即共有的元组。</p></li><li><p>并（Union）：用∪（union）符号表示。例如，关系1 ∪ 关系2 表示获取两个关系的并集，即合并两个关系的元组，去除重复项。</p></li><li><p>差（Difference）：用-（minus）符号表示。例如，关系1 - 关系2 表示获取一个关系中有而另一个关系中没有的元组。</p></li><li><p>除（Division）：用÷（division）符号表示。例如，关系1 ÷ 关系2 表示根据指定条件从一个关系中选择满足条件的元组，然后从另一个关系中选择与前一步结果关系中的所有元组匹配的元组。</p></li></ol><p>这些符号表示了关系代数中的基本操作，可以根据需要进行组合和嵌套，以实现更复杂的查询和操作。</p><h3 id="训练场"><a href="#训练场" class="headerlink" title="训练场"></a>训练场</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Emp(E#,Ename,Age,Salary,D#);</span><br><span class="line">Depa(D#,Dname,Mgr#);</span><br></pre></td></tr></table></figure><ol><li><p>检索每个部门经理的工资（显示部门编号，部门名称，经理编号，经理姓名，经理工资）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">π D#, Dname, Mgr#, Ename, Salary (σ Emp.E# = Depa.Mgr# ∧ Emp.D# = Depa.D# (Emp ∞ Depa))</span><br></pre></td></tr></table></figure></li><li><p>检索部门名称为“销售科”的职工工号，姓名，工资：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">π E#, Ename, Salary (σ Dname = &quot;销售科&quot; (Emp ∞ Depa))</span><br></pre></td></tr></table></figure></li><li><p>已知一关系数据库的模式如下：<br>供应商关系：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S(Sno,Sname,City);</span><br></pre></td></tr></table></figure><p>零件关系：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">P(Pno,Pname,Color,Weight);</span><br></pre></td></tr></table></figure><p>工程关系：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">J(Jno,Jname,City);</span><br></pre></td></tr></table></figure><p>供货关系：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SPJ(Sno,Pno,Jno,Qty);</span><br></pre></td></tr></table></figure><p>用关系代数完成下列查询：</p><ol><li><p>查询为工程’J1’供货的供应商名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Sname</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> Sno <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> Sno</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">WHERE</span> Jno <span class="operator">=</span> <span class="string">&#x27;J1&#x27;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>查询供应’螺母’零件的供应商名和所在城市：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Sname, City</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> Sno <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> Sno</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">WHERE</span> Pno <span class="keyword">IN</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> Pno</span><br><span class="line">        <span class="keyword">FROM</span> P</span><br><span class="line">        <span class="keyword">WHERE</span> Pname <span class="operator">=</span> <span class="string">&#x27;螺母&#x27;</span></span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>查询工程’J2’不使用的零件名和颜色：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Pname, Color</span><br><span class="line"><span class="keyword">FROM</span> P</span><br><span class="line"><span class="keyword">WHERE</span> Pno <span class="keyword">NOT</span> <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> Pno</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">WHERE</span> Jno <span class="operator">=</span> <span class="string">&#x27;J2&#x27;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li></ol></li></ol><h2 id="SQL语言"><a href="#SQL语言" class="headerlink" title="SQL语言"></a>SQL语言</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><p>SQL（Structured Query Language）是一种用于管理关系型数据库系统的编程语言。它是一个标准化的语言，用于存储、检索、操作和管理数据库中的数据。</p><p>SQL提供了一组用于执行各种操作的命令和语句，包括以下主要方面：</p><ol><li><p>数据定义语言（Data Definition Language，DDL）：用于创建、修改和删除数据库对象（例如表、视图、索引等）的语句。DDL语句包括CREATE、ALTER和DROP等。</p></li><li><p>数据操作语言（Data Manipulation Language，DML）：用于操作和处理数据库中的数据的语句。DML语句包括SELECT、INSERT、UPDATE和DELETE等。</p></li><li><p>数据控制语言（Data Control Language，DCL）：用于控制数据库的安全性和访问权限的语句。DCL语句包括GRANT和REVOKE等。</p></li><li><p>数据查询语言（Data Query Language，DQL）：用于从数据库中检索数据的语句。DQL语句主要是SELECT语句，用于查询满足指定条件的数据。</p></li></ol><p>SQL语言的特点包括：</p><ul><li>面向集合：SQL处理数据的基本单位是集合，即表中的行。</li><li>声明式语言：SQL是一种声明式语言，用户只需描述所需的结果，而不需要指定具体的操作步骤。</li><li>高度可扩展：SQL支持在单个查询中使用多个表进行联接，执行复杂的数据操作和聚合运算。</li><li>广泛应用：SQL是关系型数据库系统的标准查询语言，几乎所有主流的关系型数据库管理系统（如MySQL、Oracle、SQL Server等）都支持SQL语言。</li></ul><p>通过SQL语言，用户可以方便地管理和操作数据库中的数据，执行各种查询、更新和管理任务。</p><h3 id="训练场-1"><a href="#训练场-1" class="headerlink" title="训练场"></a>训练场</h3><p>这里存在数据库，结构为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Student(<span class="keyword">No</span>,name,sex,age,class);</span><br><span class="line">Course(Cno,cname,Tno);</span><br><span class="line">Teacher(Tno,name,sex,prof,dept);</span><br><span class="line">Score(<span class="keyword">No</span>,Cno,Grade);</span><br></pre></td></tr></table></figure><ol><li><p>查询选修课程<code>3-105</code>且成绩在60到80之间的所有记录：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> Score</span><br><span class="line"><span class="keyword">WHERE</span> Cno <span class="operator">=</span> <span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> Grade <span class="keyword">BETWEEN</span> <span class="number">60</span> <span class="keyword">AND</span> <span class="number">80</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询成绩为85,86或88的记录：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> Score</span><br><span class="line"><span class="keyword">WHERE</span> Grade <span class="keyword">IN</span> (<span class="number">85</span>, <span class="number">86</span>, <span class="number">88</span>);</span><br></pre></td></tr></table></figure></li><li><p>查询<code>95031</code>班的学生人数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Class <span class="operator">=</span> <span class="string">&#x27;95031&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询至少有5名同学选修的并以3开头的课程的平均成绩：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(Grade)</span><br><span class="line"><span class="keyword">FROM</span> Score</span><br><span class="line"><span class="keyword">WHERE</span> Cno <span class="keyword">LIKE</span> <span class="string">&#x27;3%&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Cno</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;=</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询最低分大于70，最高分小于90的<code>NO</code>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">No</span></span><br><span class="line"><span class="keyword">FROM</span> Score</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">No</span></span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">MIN</span>(Grade) <span class="operator">&gt;</span> <span class="number">70</span> <span class="keyword">AND</span> <span class="built_in">MAX</span>(Grade) <span class="operator">&lt;</span> <span class="number">90</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询<code>95033</code>班学生所选课程的平均分：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(Grade)</span><br><span class="line"><span class="keyword">FROM</span> Score, Student</span><br><span class="line"><span class="keyword">WHERE</span> Score.No <span class="operator">=</span> Student.No <span class="keyword">AND</span> Class <span class="operator">=</span> <span class="string">&#x27;95033&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">No</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询选修<code>3-105</code>课程的成绩高于<code>109</code>号同学成绩的所有同学的记录：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> Score</span><br><span class="line"><span class="keyword">WHERE</span> Cno <span class="operator">=</span> <span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> Grade <span class="operator">&gt;</span> (<span class="keyword">SELECT</span> Grade <span class="keyword">FROM</span> Score <span class="keyword">WHERE</span> Cno <span class="operator">=</span> <span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> <span class="keyword">No</span> <span class="operator">=</span> <span class="string">&#x27;109&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>查询与学号为<code>108</code>的同学同岁的所有学生的<code>NO</code>, <code>Name</code>, <code>Age</code>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">No</span>, Name, Age</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Age <span class="operator">=</span> (<span class="keyword">SELECT</span> Age <span class="keyword">FROM</span> Student <span class="keyword">WHERE</span> <span class="keyword">No</span> <span class="operator">=</span> <span class="string">&#x27;108&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>查询<code>张旭</code>教师任课的课程号及选修其课程的学生的学号和成绩：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">No</span>, Grade</span><br><span class="line"><span class="keyword">FROM</span> Score</span><br><span class="line"><span class="keyword">WHERE</span> Cno <span class="keyword">IN</span> (<span class="keyword">SELECT</span> Cno <span class="keyword">FROM</span> Course <span class="keyword">WHERE</span> Tno <span class="operator">=</span> (<span class="keyword">SELECT</span> Tno <span class="keyword">FROM</span> Teacher <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;张旭&#x27;</span>));</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">No</span>, Grade</span><br><span class="line"><span class="keyword">FROM</span> Score, Teacher, Course</span><br><span class="line"><span class="keyword">WHERE</span> Teacher.Tno <span class="operator">=</span> Course.Tno <span class="keyword">AND</span> Course.Cno <span class="operator">=</span> Score.Cno <span class="keyword">AND</span> Teacher.name <span class="operator">=</span> <span class="string">&#x27;张旭&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询选修某课程的学生人数多于30人的教师姓名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Name</span><br><span class="line"><span class="keyword">FROM</span> Teahcer</span><br><span class="line"><span class="keyword">WHERE</span> Tno <span class="keyword">IN</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> Tno</span><br><span class="line">   <span class="keyword">FROM</span> Course</span><br><span class="line">   <span class="keyword">WHERE</span> Cno <span class="keyword">IN</span> (</span><br><span class="line">       <span class="keyword">SELECT</span> Cno</span><br><span class="line">       <span class="keyword">FROM</span> Score</span><br><span class="line">       <span class="keyword">GROUP</span> <span class="keyword">BY</span> Cno</span><br><span class="line">       <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="keyword">No</span>) <span class="operator">&gt;</span> <span class="number">30</span></span><br><span class="line">   )</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Name</span><br><span class="line"><span class="keyword">FROM</span> Techaer, Score, Course</span><br><span class="line"><span class="keyword">WHERE</span> Techaer.Tno <span class="operator">=</span> Course.Tno</span><br><span class="line">   <span class="keyword">AND</span> Course.Cno <span class="operator">=</span> Score.Cno</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Cno</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">30</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询<code>计算机系</code>与<code>电子工程系</code>不同职称的教师姓名和职称：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, prof</span><br><span class="line"><span class="keyword">FROM</span> Teacher</span><br><span class="line"><span class="keyword">WHERE</span> Dept <span class="operator">=</span> <span class="string">&#x27;电子工程系&#x27;</span> <span class="keyword">AND</span> Prof <span class="keyword">NOT</span> <span class="keyword">IN</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> Prof</span><br><span class="line">   <span class="keyword">FROM</span> Teacher</span><br><span class="line">   <span class="keyword">WHERE</span> Dept <span class="operator">=</span> <span class="string">&#x27;计算机系&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>查询选修编号为<code>3-105</code>课程且成绩至少高于选修编号为<code>3-234</code>课程的同学的课号、学号、成绩，并按成绩降序排列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">No</span>, grade</span><br><span class="line"><span class="keyword">FROM</span> Score</span><br><span class="line"><span class="keyword">WHERE</span> Cno <span class="operator">=</span> <span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> Grade <span class="operator">&gt;</span> <span class="keyword">ANY</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> grade</span><br><span class="line">   <span class="keyword">FROM</span> Score</span><br><span class="line">   <span class="keyword">WHERE</span> Cno <span class="operator">=</span> <span class="string">&#x27;3-234&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> grade <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询选修编号为<code>3-105</code>课程且成绩高于选修编号为<code>3-234</code>课程的同学的课号、学号、成绩，并按成绩降序排列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">No</span>, grade</span><br><span class="line"><span class="keyword">FROM</span> Score</span><br><span class="line"><span class="keyword">WHERE</span> Cno <span class="operator">=</span> <span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> Grade <span class="operator">&gt;</span> <span class="keyword">ALL</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> grade</span><br><span class="line">   <span class="keyword">FROM</span> Score</span><br><span class="line">   <span class="keyword">WHERE</span> Cno <span class="operator">=</span> <span class="string">&#x27;3-234&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> grade <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure></li><li><p>列出所有老师和同学的姓名、性别和年龄：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Name, Sex, Age</span><br><span class="line"><span class="keyword">FROM</span> teacher</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> Name, Sex, Age</span><br><span class="line"><span class="keyword">FROM</span> student;</span><br></pre></td></tr></table></figure></li><li><p>查询成绩比该课平均成绩低的学生的成绩表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">No</span>, Grade</span><br><span class="line"><span class="keyword">FROM</span> Score</span><br><span class="line"><span class="keyword">WHERE</span> Grade <span class="operator">&lt;</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> <span class="built_in">AVG</span>(Grade)</span><br><span class="line">   <span class="keyword">FROM</span> Score <span class="keyword">AS</span> y</span><br><span class="line">   <span class="keyword">WHERE</span> Score.Cno <span class="operator">=</span> y.Cno</span><br><span class="line">   <span class="keyword">GROUP</span> <span class="keyword">BY</span> Cno</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>列出所有任课教师的Name和Dept：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Name, Dept</span><br><span class="line"><span class="keyword">FROM</span> Teacher</span><br><span class="line"><span class="keyword">WHERE</span> Tno <span class="keyword">IN</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> Tno</span><br><span class="line">   <span class="keyword">FROM</span> Course</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Name, Dept</span><br><span class="line"><span class="keyword">FROM</span> Teahcer <span class="keyword">AS</span> A</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">   <span class="keyword">FROM</span> Course <span class="keyword">AS</span> B</span><br><span class="line">   <span class="keyword">WHERE</span> A.Tno <span class="operator">=</span> B.Tno</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>列出所有未讲课教师的Name和Dept：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Name, Dept</span><br><span class="line"><span class="keyword">FROM</span> Teacher</span><br><span class="line"><span class="keyword">WHERE</span> Tno <span class="keyword">NOT</span> <span class="keyword">IN</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> Tno</span><br><span class="line">   <span class="keyword">FROM</span> Course</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Name, Dept</span><br><span class="line"><span class="keyword">FROM</span> Teahcer <span class="keyword">AS</span> A</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">   <span class="keyword">FROM</span> Course <span class="keyword">AS</span> B</span><br><span class="line">   <span class="keyword">WHERE</span> A.Tno <span class="operator">=</span> B.Tno</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>列出至少有2名男生的班级编号：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Class</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> sex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Class</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询不姓<code>王</code>的学生记录：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> Name <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">&#x27;王%&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询每门课最高分的同学的No, Cno, Grade：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">No</span>, Cno, Grade</span><br><span class="line"><span class="keyword">FROM</span> Score A</span><br><span class="line"><span class="keyword">WHERE</span> Grade <span class="operator">=</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(Grade)</span><br><span class="line">   <span class="keyword">FROM</span> Score B</span><br><span class="line">   <span class="keyword">WHERE</span> A.Cno <span class="operator">=</span> B.Cno</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">No</span>, Cno, Grade</span><br><span class="line"><span class="keyword">FROM</span> Score A</span><br><span class="line"><span class="keyword">WHERE</span> A.Cno <span class="operator">=</span> B.Cno <span class="keyword">AND</span> Grade <span class="operator">=</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(Grade)</span><br><span class="line">   <span class="keyword">FROM</span> Score B</span><br><span class="line">   <span class="keyword">GROUP</span> <span class="keyword">BY</span> Cno</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>查询与“李军”同性别并同班的同学姓名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Name</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Class <span class="operator">=</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> Class</span><br><span class="line">   <span class="keyword">FROM</span> Student</span><br><span class="line">   <span class="keyword">WHERE</span> Name <span class="operator">=</span> <span class="string">&#x27;李军&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">AND</span> sex <span class="operator">=</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> sex</span><br><span class="line">   <span class="keyword">FROM</span> Student</span><br><span class="line">   <span class="keyword">WHERE</span> Name <span class="operator">=</span> <span class="string">&#x27;李军&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>查询<code>男</code>教师及其所任的课程：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> A.Name, B.Cname</span><br><span class="line"><span class="keyword">FROM</span> Teacher A, Course B</span><br><span class="line"><span class="keyword">WHERE</span> A.Tno <span class="operator">=</span> B.Tno <span class="keyword">AND</span> A.sex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询选修<code>计算机导论</code>课程的<code>男</code>同学的成绩表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">No</span>, Cno, Grade</span><br><span class="line"><span class="keyword">FROM</span> Score</span><br><span class="line"><span class="keyword">WHERE</span> Cno <span class="keyword">IN</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> Cno</span><br><span class="line">   <span class="keyword">FROM</span> Course</span><br><span class="line">   <span class="keyword">WHERE</span> Cname <span class="operator">=</span> <span class="string">&#x27;计算机导论&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">AND</span> <span class="keyword">No</span> <span class="keyword">IN</span> (</span><br><span class="line">   <span class="keyword">SELECT</span> <span class="keyword">No</span></span><br><span class="line">   <span class="keyword">FROM</span> Student</span><br><span class="line">   <span class="keyword">WHERE</span> Sex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">No</span>, Cno, Grade</span><br><span class="line"><span class="keyword">FROM</span> Score A, Student B, Course C</span><br><span class="line"><span class="keyword">WHERE</span> A.No <span class="operator">=</span> B.No</span><br><span class="line"><span class="keyword">AND</span> A.Cno <span class="operator">=</span> C.Cno</span><br><span class="line"><span class="keyword">AND</span> C.Cname <span class="operator">=</span> <span class="string">&#x27;计算机导论&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> B.Sex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>在数据库中要求每个经理的工资大于2000元。试在Depa表的定义时，加一个Check子句，以满足上述要求。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE Depa ADD CHECK (Mgr# IN (SELECT E# FROM Emp WHERE Salary &gt; 2000))</span><br></pre></td></tr></table></figure></li><li><p>更新Depa表，将经理编号（Mgr#）设置为null，满足条件：Depa表中的Mgr#等于Emp表中的E#，并且Emp表中的Age大于50。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE Depa SET Mgr# = NULL WHERE Mgr# IN (SELECT E# FROM Emp WHERE Age &gt; 50)</span><br></pre></td></tr></table></figure></li><li><p>创建一个年龄大于50岁的职工视图（D#, Dname, E#, Ename, Age, Salary）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE VIEW wyy AS</span><br><span class="line">SELECT D#, Dname, E#, Ename, Age, Salary</span><br><span class="line">FROM Emp, Depa</span><br><span class="line">WHERE Emp.E# = Depa.Mgr# AND Emp.Age &gt; 50;</span><br></pre></td></tr></table></figure></li><li><p>用Create table 命令定义Depa表（需要定义主键和外键）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span> Depa (</span><br><span class="line">    D# <span class="type">char</span>(<span class="number">10</span>) <span class="keyword">primary</span> key,</span><br><span class="line">    Dname <span class="type">char</span>(<span class="number">8</span>),</span><br><span class="line">    Mgr# <span class="type">char</span>(<span class="number">15</span>),</span><br><span class="line">    <span class="keyword">Foreign</span> key (Mgr#) <span class="keyword">references</span> Emp(E#)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>查询每个部门的职工人数和平均工资，要求显示（部门号，部门名称，职工人数，平均工资）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> D#, Dname, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> 职工人数, <span class="built_in">AVG</span>(Salary) <span class="keyword">as</span> 平均工资</span><br><span class="line"><span class="keyword">FROM</span> Depa, Emp</span><br><span class="line"><span class="keyword">WHERE</span> Depa.D# <span class="operator">=</span> Emp.D#</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> D#</span><br></pre></td></tr></table></figure></li><li><p>在Depa表中删除人数少于10人的部门元组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> Depa</span><br><span class="line"><span class="keyword">WHERE</span> D# <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> D#</span><br><span class="line">    <span class="keyword">FROM</span> Emp</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> D#</span><br><span class="line">    <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&lt;</span> <span class="number">10</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li></ol><div class="note warning"><p>对于上述关系代数与SQL的示例可能存在不合理的部分，请跟据实际情况修改，毕竟，只有生产环境才是有真正明确需求的与真实的环境。</p></div><h3 id="万用模版"><a href="#万用模版" class="headerlink" title="万用模版"></a>万用模版</h3><ul><li><p>查询模版</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [列名]</span><br><span class="line"><span class="keyword">FROM</span> [表名]</span><br><span class="line">[<span class="keyword">JOIN</span> 子句]</span><br><span class="line"><span class="keyword">WHERE</span> [条件]</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> [列名]</span><br><span class="line"><span class="keyword">HAVING</span> [条件]</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> [列名] [<span class="keyword">ASC</span><span class="operator">|</span><span class="keyword">DESC</span>]</span><br><span class="line">LIMIT [数量];</span><br></pre></td></tr></table></figure></li><li><p>插入模版</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> [表名] ([列<span class="number">1</span>], [列<span class="number">2</span>], ...)</span><br><span class="line"><span class="keyword">VALUES</span> ([值<span class="number">1</span>], [值<span class="number">2</span>], ...);</span><br></pre></td></tr></table></figure></li><li><p>修改模版</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> [表名]</span><br><span class="line"><span class="keyword">SET</span> [列<span class="number">1</span>] <span class="operator">=</span> [新值<span class="number">1</span>], [列<span class="number">2</span>] <span class="operator">=</span> [新值<span class="number">2</span>], ...</span><br><span class="line"><span class="keyword">WHERE</span> [条件];</span><br></pre></td></tr></table></figure></li><li><p>删除模版</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> [表名]</span><br><span class="line"><span class="keyword">WHERE</span> [条件];</span><br></pre></td></tr></table></figure></li><li><p>定义视图模版</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> [视图名] <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> [列<span class="number">1</span>], [列<span class="number">2</span>], ...</span><br><span class="line"><span class="keyword">FROM</span> [表名]</span><br><span class="line"><span class="keyword">WHERE</span> [条件];</span><br></pre></td></tr></table></figure><ul><li><p>解释说明：</p><ul><li><code>[视图名]</code>：指定要创建的视图的名称。</li><li><code>[列1], [列2], ...</code>：指定要包含在视图中的列名。</li><li><code>[表名]</code>：指定要从中提取数据的表名。</li><li><code>[条件]</code>：可选项，用于筛选特定的数据行。</li></ul></li><li><p>注意事项：</p><ul><li>方括号 <code>[ ]</code> 中的内容是需要替换为具体的值或表达式。</li><li>视图是从一个或多个基本表派生出来的虚拟表，其内容是基于查询的结果集。因此，在定义视图时，需要使用合适的 SELECT<br>语句来指定视图的内容。</li></ul></li></ul></li><li><p>建表模版</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [表名] (</span><br><span class="line">    [列<span class="number">1</span>] [数据类型] [约束],</span><br><span class="line">    [列<span class="number">2</span>] [数据类型] [约束],</span><br><span class="line">    ...</span><br><span class="line">    [列N] [数据类型] [约束]</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li><p>解释说明：</p><ul><li><code>[表名]</code>：指定要创建的表的名称。</li><li><code>[列1], [列2], ..., [列N]</code>：指定要创建的列名。</li><li><code>[数据类型]</code>：指定每个列的数据类型，如 INT、VARCHAR、DATE 等。</li><li><code>[约束]</code>：可选项，用于指定列级别的约束条件，如 PRIMARY KEY、NOT NULL、UNIQUE 等。</li></ul></li><li><p>注意事项：</p><ul><li>方括号 <code>[ ]</code> 中的内容是需要替换为具体的值或表达式。</li><li>每个列定义需要包含列名和数据类型。</li><li>可以在每个列定义后面添加约束来进一步定义列的行为和限制。</li><li>可以根据需要在表定义的末尾添加其他选项，如存储引擎、字符集等。</li></ul></li></ul></li><li><p>创建角色模版</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> ROLE <span class="string">&#x27;角色名&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li><p>解释说明：</p><ul><li><code>&#39;角色名&#39;</code>：指定要创建的角色名称，角色名称用单引号括起来。</li></ul></li><li><p>注意事项：</p><ul><li>角色名称应遵循 MySQL 的命名规则，如不能包含特殊字符、空格等。</li><li>创建角色需要具有适当的权限，通常是 <code>CREATE ROLE</code> 权限。</li></ul></li></ul></li><li><p>角色赋权模版</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> 权限列表 <span class="keyword">TO</span> <span class="string">&#x27;角色名&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li><p>解释说明：</p><ul><li><code>权限列表</code>：指定要授予给角色的权限，可以是单个权限或多个权限，多个权限之间使用逗号分隔。</li><li><code>&#39;角色名&#39;</code>：指定要授予权限的角色名称，角色名称用单引号括起来。</li></ul></li><li><p>注意事项：</p><ul><li>角色和权限都应存在于数据库中。</li><li>授予权限需要具有适当的权限，通常是 <code>GRANT</code> 权限。</li></ul></li><li><p>使用上述模板，你可以为角色赋予指定的权限。将 <code>&#39;角色名&#39;</code> 替换为实际的角色名称，将 <code>权限列表</code><br>替换为要授予的具体权限即可。如果需要授予多个权限，可以在 <code>权限列表</code> 中使用逗号分隔不同的权限项。</p><blockquote><p>示例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span> <span class="keyword">ON</span> database.table <span class="keyword">TO</span> <span class="string">&#x27;角色名&#x27;</span>;</span><br></pre></td></tr></table></figure><p>上述示例将 SELECT、INSERT 和 UPDATE 权限授予给名为 <code>&#39;角色名&#39;</code> 的角色。你可以根据实际情况调整权限列表和角色名称。</p></blockquote></li></ul></li><li><p>授权模版</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> [权限列表] <span class="keyword">ON</span> [数据库].[表] <span class="keyword">TO</span> <span class="string">&#x27;[用户名]&#x27;</span>@<span class="string">&#x27;[主机]&#x27;</span> [<span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION];</span><br></pre></td></tr></table></figure><ul><li><p>解释说明：</p><ul><li><code>[权限列表]</code>：指定要授予的权限，可以是多个权限，用逗号分隔，如 SELECT, INSERT, UPDATE。</li><li><code>[数据库]</code>：指定要授予权限的数据库名称。如果要授予全局权限，可以使用通配符 <code>*</code>。</li><li><code>[表]</code>：可选项，指定要授予权限的表名。如果要授予数据库级别的权限，可以省略该部分。</li><li><code>&#39;[用户名]&#39;@&#39;[主机]&#39;</code><br>：指定要授予权限的用户和对应的主机。用户名和主机分别用单引号括起来。如果要授予全局权限，可以使用通配符 <code>%</code>。</li><li><code>WITH GRANT OPTION</code>：可选项，允许被授权的用户进一步授予该权限给其他用户。</li></ul></li><li><p>注意事项：</p><ul><li>方括号 <code>[ ]</code> 中的内容是需要替换为具体的值或表达式。</li><li>权限可以是诸如 SELECT、INSERT、UPDATE、DELETE 等数据库操作的关键字。</li><li>可以根据需要指定具体的数据库和表，或者使用通配符 <code>*</code> 表示所有数据库或表。</li><li>授权操作需要具有适当的权限，通常是 <code>GRANT OPTION</code> 权限。</li></ul></li></ul></li></ul><h2 id="E-R图"><a href="#E-R图" class="headerlink" title="E-R图"></a>E-R图</h2><h3 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h3><p>E-R图（实体-关系图）是一种用于数据建模的图形工具，用于描述现实世界中的实体、实体之间的关系以及实体属性的结构化图形化表示。它基于实体-关系模型，是一种高层次、抽象的表示方式，用于在数据库设计和开发过程中描述实体、关系和属性之间的概念和关联。</p><p>E-R图由实体、关系和属性组成，其中：</p><ul><li>实体（Entity）代表现实世界中具有独立存在和可识别的事物，如人、物、地点或概念。每个实体都有一个唯一的标识符（主键），并具有属性描述实体的特征。</li><li>关系（Relationship）表示实体之间的联系或关联。关系可以是一对一、一对多或多对多的关系，用于描述实体之间的交互和依赖。</li><li>属性（Attribute）是实体的特征或描述，用于存储实体的具体数据。属性可以是简单属性（如姓名、年龄）或复合属性（如地址，由街道、城市和邮编组成）。</li></ul><p>通过使用符号和连接线，E-R图提供了一种直观的方式来可视化和表示实体、关系和属性之间的结构和相互作用。它是数据库设计和规划的重要工具，有助于理解和沟通数据模型的概念，以便更好地设计和管理数据库系统。</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>Student(<u>id</u>, name, gender)</p><p>Class(<u>cid</u>, name)</p><p>Teacher(<u>tid</u>, gender, name)</p><p><strong>我们使用<code>_</code>来表述一张数据表中的主键字段。</strong></p><p><strong>图中连接表与表的线条，应该是干净的，不应该有类似于分支的部分，应该与连接表与字段的线条一致。</strong></p><img no-lazy class="inline" src="/picture/E-R图.png" style="height:500px;"/>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My first blog post</title>
      <link href="/2023/07/05/my-first-blog-post/"/>
      <url>/2023/07/05/my-first-blog-post/</url>
      
        <content type="html"><![CDATA[<h1 id="如何搭建一个属于自己的博客网站？"><a href="#如何搭建一个属于自己的博客网站？" class="headerlink" title="如何搭建一个属于自己的博客网站？"></a>如何搭建一个属于自己的博客网站？</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p><code>今天早些的时候我在看Nginx的教程，那位youtuber就使用了Hexo搭建的博客进行反向代理测试，于是我就很感兴趣，便去了解了一下</code></p><div class="link-group"><div class="tagLink"><a class="link-card" title="30分钟Nginx入门教程 - YouTube" href="https://youtu.be/sCJcusORiE8"><span class="link-card-backdrop" style="background-image: url(https://pica.zhimg.com/80/v2-970dd5538f106dd6be064c4eafc01c36_1440w.webp)"></span><div class="left"><img src="https://pica.zhimg.com/80/v2-970dd5538f106dd6be064c4eafc01c36_1440w.webp" class="lazyload placeholder" data-srcset="https://pica.zhimg.com/80/v2-970dd5538f106dd6be064c4eafc01c36_1440w.webp" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"/></div><div class="right"><p class="text">30分钟Nginx入门教程 - YouTube</p><p class="url">https://youtu.be/sCJcusORiE8</p></div></a></div></div><p>访问<a href="https://hexo.io/">Hexo</a>以了解更多内容。</p><p>我选择了一个自己蛮喜欢的主题。</p><p>我也修改了很多配置项，不过总的说还是非常容易理解的。</p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>这过程中最最最离谱的问题（对我来说）是：关于git push的问题，经常push不上去，所以我就排查了问题原因，试过了修改<code>/etc/hosts</code>的配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash -c &#x27;echo &quot;&lt;IP&gt; &lt;hostname&gt;&quot; &gt;&gt; /etc/hosts&#x27;</span><br></pre></td></tr></table></figure><p>也尝试了修改<code>http.version</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.version HTTP/1.1</span><br></pre></td></tr></table></figure><p>发现没有用，最后，我发现是代理的问题，因为在浏览器中打开GitHub没问题，但使用git的时候就<code>could&#39;t connect</code>，原因在于git默认不使用代理端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy 127.0.0.1:[port]</span><br><span class="line">git config --global https.proxy 127.0.0.1:[port]</span><br></pre></td></tr></table></figure><p><code>port</code>为代理端口号</p><p>这个问题就如此解决了。</p><h2 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h2><p>说实话，太累了写这东西。</p>]]></content>
      
      
      <categories>
          
          <category> Pointless small talk </category>
          
      </categories>
      
      
        <tags>
            
            <tag> one </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
